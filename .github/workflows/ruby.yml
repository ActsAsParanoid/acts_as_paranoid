# This workflow will download a prebuilt Ruby version, install dependencies and
# run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: CI

"on":
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: '16 4 12 * *'

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        ruby: ["2.7", "3.0", "3.1", "3.2", jruby-9.4]
        gemfile: [active_record_60, active_record_61, active_record_70, active_record_71]
        include:
          # Rails 5.2 only works with Ruby 2.7 and below
          - ruby: "2.7"
            gemfile: active_record_52

    env:
      BUNDLE_GEMFILE: gemfiles/${{ matrix.gemfile }}.gemfile

    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - name: Configure bundler
        run: |
          bundle config path vendor/bundle
      - name: Create bundler lockfile
        run: |
          bundle lock
      - uses: actions/cache@v3
        with:
          # NOTE: Bundler expands the path relative to the gemfile, not the
          # current directory.
          path: ./gemfiles/vendor/bundle
          key: bundled-gems-${{ runner.os }}-ruby-${{ matrix.ruby }}-${{ matrix.gemfile }}-${{ hashFiles( 'gemfiles/*.lock' ) }}
          restore-keys: |
            bundled-gems-${{ runner.os }}-ruby-${{ matrix.ruby }}-${{ matrix.gemfile }}-
            bundled-gems-${{ runner.os }}-ruby-${{ matrix.ruby }}-
      - name: Install gems
        run: |
          bundle install --jobs 4
      - name: Run tests
        run: bundle exec rake test

  rubocop:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true
      - name: Run RuboCop
        run: bundle exec rubocop -P
